{"version":3,"sources":["../../src/datasource.js"],"names":["Warp10Datasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","lastErrors","options","backend","length","substr","console","log","each","variables","variable","isNaN","current","value","replace","RegExp","method","data","headers","undefined","datasourceRequest","then","parseTemplatingResult","o","map","indice","text","toString","res","status","message","title","catch","err","end","convertToWarp10Time","range","to","start","from","queries","targets","bind","target","expr","push","isEmpty","d","defer","resolve","promise","allQueryPromise","query","performTimeSeriesQuery","self","all","allResponse","result","response","index","isArray","warpscriptJsonResponse","metricData","transformMetricData","annotation","error","gts","tags","label","l","annotations","v","dp","enabled","datasource","c","time","Math","trunc","join","de","filter","refId","hide","warpscriptScript","prepareWarpscriptQuery","endISO","convertToISO","startISO","interval","tmp","isGts","className","labels","key","metricName","dps","floor","datapoints","Array","splice","propertyIsEnumerable","a","date","parse","timestamp","Date","toISOString","roundUp","isMoment","isDate","mathString","parseString","substring","indexOf","ISO_8601","parseDateMath"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\nimport './css/app.css!'\n\nexport class Warp10Datasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n    this.lastErrors = {};\n  }\n\n  // Optional\n  // Required for templating\n  metricFindQuery(options) {\n\n    var backend = this.url;\n    while (backend[backend.length-1] === '/') {\n      // remove trailing slash\n      backend = backend.substr(0, backend.length - 1);\n    }\n    var url = backend + '/api/v0/exec';\n\n    console.log(this.templateSrv);\n    _.each(this.templateSrv.variables, function(variable) {\n      if (isNaN(variable.current.value)) {\n        options = options.replace(new RegExp('\\\\$' + variable.name, 'g'), \"'$\" + variable.name + \"'\");\n      }\n    });\n    options = this.templateSrv.replace(options, null, 'regex')\n\n    options = {\n      method: 'POST',\n      url: url,\n      data: options,\n      headers: {\n          'Accept': undefined,\n          'Content-Type': undefined\n      }\n    };\n    return this.backendSrv.datasourceRequest(options).then(this.parseTemplatingResult);\n  }\n\n  parseTemplatingResult(o) {\n    console.log('tesmplating result', o)\n     return _.map(o.data, (data, indice) => {\n      return { text: data.toString() || indice, value: data};\n    });\n  }\n\n  // Used by Grafana to test a Datasource when one is added\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/api/v0/exec',\n      method: 'POST',\n      data: '1 2 +',\n      headers: {\n          'Accept': undefined,\n          'Content-Type': undefined\n      }\n    })\n    .then(res => {\n      if (res.status != 200) {\n        return {\n          status: 'error',\n          message: 'Not a 200 receivend from server',\n          title: 'Error'\n        };\n      }\n      if (res.data[0] != 3) {\n        return {\n          status: 'error',\n          message: \"Can't execute test WarpScript: '1 2 +'not equals to \" + res.data,\n          title: 'Success'\n        };\n      }\n      return {\n        status: 'success',\n        message: 'Datasource is working',\n        title: 'Success'\n      };\n    })\n    .catch((res) => {\n      return {\n        status: 'error',\n        message: res.err,\n        title: 'Failed to contact server'\n      };\n    });\n  }\n\n  // Called once per panel (graph)\n  query(options) {\n\n    console.log(\"Query begin\");\n\n    var end = this.convertToWarp10Time(options.range.to);\n    var start = this.convertToWarp10Time(options.range.from);\n\n    console.log(\"From: \"+start+ \" To: \"+end);\n\n\n    var queries = [];\n\n    console.log(\"Before foreach\");\n\n    _.each(options.targets, _.bind(function(target) {\n\n      console.log(\"Expre\", target.expr);\n      console.log(\"Backend URL\", target.backend);\n\n      queries.push(target);\n    }, this));\n\n    console.log(\"After foreach\");\n\n    // No valid targets, return the empty result to save a round trip.\n    if (_.isEmpty(queries)) {\n\n      console.log(\"Empty query\");\n\n      var d = this.q.defer();\n      d.resolve({ data: [] });\n      return d.promise;\n    }\n\n    var allQueryPromise = _.map(queries, _.bind(function(query) {\n      return this.performTimeSeriesQuery(query, start, end);\n    }, this));\n\n    var self = this;\n    return this.q.all(allQueryPromise)\n      .then(function(allResponse) {\n        var result = [];\n\n        _.each(allResponse, function(response, index) {\n\n          console.log(\"Response\", response);\n          if (response.data.type === 'error') {\n            self.lastErrors.query = response.data.value;\n            throw response.data.value;\n          }\n          delete self.lastErrors.query;\n\n          if (!self.isArray(response.data) || (response.data.length !== 1)) {\n            console.log(\"Response isn't an Array or it has more than 1 element\", response.data);\n            return {};\n          }\n\n          var warpscriptJsonResponse = response.data[0];\n          _.each(warpscriptJsonResponse, function(metricData) {\n            console.log(\"Metric data\",metricData);\n            result.push(self.transformMetricData(metricData, options.targets[index]));\n          });\n        });\n\n        return { data: result };\n      });\n  }\n\n  // Used by Grafana for Dashboard annotations\n  annotationQuery(options) {\n\n    var end = this.convertToWarp10Time(options.range.to);\n    var start = this.convertToWarp10Time(options.range.from);\n\n    return this.performTimeSeriesQuery({\n      expr: options.annotation.query\n    }, start, end)\n    .then((res) => {\n      if (res.data.length != 1 || typeof res.data[0] != 'object') {\n        console.error('Annotation query must return exactly 1 GeoTimeSerie, current stack is:', res.data)\n        return [];\n      }\n      let gts = res.data[0]\n      console.log('GTS', gts)\n      let tags = []\n      for (let label in gts.l) {\n        tags.push(label+':'+gts.l[label])\n      }\n\n      let annotations = []\n\n      for (let dp of gts.v) {\n        annotations.push({\n          annotation: {\n            name: options.annotation.name,\n            enabled: true,\n            datasource: this.name,\n          },\n          title: gts.c,\n          time: Math.trunc(dp[0] / 1000),\n          text: dp[1],\n          tags: (tags.length > 0) ? tags.join(',') : null\n        });\n      }\n      console.de\n      return annotations\n    })\n    .catch((err) => {\n      console.error('Failed to retrieve annotations', err, options)\n      return []\n    })\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.target !== 'select metric';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        target: this.templateSrv.replace(target.target),\n        refId: target.refId,\n        hide: target.hide,\n        expr: target.expr,\n        backend: target.backend\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n\n  /* ******************************************************/\n  /* Puts into the Warpscript script a header to place\n  /* start and end ont the stacks\n  /* ******************************************************/\n  performTimeSeriesQuery(query, start, end) {\n\n    var warpscriptScript = this.prepareWarpscriptQuery(query, start, end);\n\n    var backend = this.url;\n    // If we have defined a backend in the query editor, it takes preecedence\n    // over the datasource\n    if ((query.backend !== undefined) && (query.backend.length >0)) {\n      backend = query.backend;\n    }\n\n    while (backend[backend.length-1] === '/') {\n      // remove trailing slash\n      backend = backend.substr(0, backend.length - 1);\n    }\n\n    var url = backend + '/api/v0/exec';\n\n    var options = {\n      method: 'POST',\n      url: url,\n      data: warpscriptScript,\n      headers: {\n          'Accept': undefined,\n          'Content-Type': undefined\n      }\n    };\n\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  /* ******************************************************/\n  /* Puts into the Warpscript script a header to place\n  /* start and end ont the stack\n  /* ******************************************************/\n  prepareWarpscriptQuery(query, start, end) {\n\n    var endISO = this.convertToISO(end);\n    var startISO = this.convertToISO(start);\n    var interval = end - start;\n\n    var warpscriptScript =\n          \" \" + start + \" 'start' STORE \" + end + \" 'end' STORE \" +\n          \"'\" + startISO + \"' 'startISO' STORE '\" + endISO + \"' 'endISO' STORE \" +\n          interval + \" 'interval' STORE\";\n\n    for (let variable of this.templateSrv.variables) {\n      var tmp = variable.current.text;\n      if( isNaN(variable.current.text) ) {\n        // It's a string\n        tmp = \"'\" + variable.current.text + \"'\";\n      }\n      warpscriptScript += \"\\n\" + tmp + \" '\"+variable.name+\"' STORE\";\n    }\n    if (query.expr !== undefined) {\n      warpscriptScript += \" \" + query.expr;\n    }\n    return warpscriptScript;\n  }\n\n  /* ******************************************************/\n  /* Transform from Warpscript JSON to Grafana dps\n  /* ******************************************************/\n  transformMetricData(gts) {\n\n    if (!this.isGts(gts)) {\n      console.log(\"Response item isn't a gts\",gts);\n      return;\n    }\n\n    var className = gts.c;\n\n    var labels =\n      _.map(gts.l, function(value, key) {\n        return key+\"=\"+value;\n      }).join(\",\");\n\n    var metricName = className+\"{\"+labels+\"}\";\n    var dps = [];\n\n    _.each(gts.v, function(value) {\n      // Datapoint format: [ value, label]\n      dps.push([value[value.length -1], Math.floor(value[0]/1000)]);\n    });\n\n    // Metric format {target: \"Label text\", datapoints: [ datapoints objects] }\n\n    console.log({ target: metricName , datapoints: dps });\n    return { target: metricName, datapoints: dps };\n  }\n\n  /* ******************************************************/\n  /* Returns true if @value is an Array\n  /* ******************************************************/\n  isArray(value) {\n    return value && typeof value === 'object' && value instanceof Array && typeof value.length === 'number'\n      && typeof value.splice === 'function' && !(value.propertyIsEnumerable('length'));\n  }\n\n  /* ******************************************************/\n  /* Returns true if @gts is a JSON object version of a GTS\n  /* ******************************************************/\n  isGts(gts) {\n    if ((gts.c == null) || (gts.l == null) || (gts.a == null) || (gts.v == null)) {\n      return false;\n    }\n    return true;\n  }\n\n  /* ******************************************************/\n  /* Converts @date into µs since Epoch time\n  /* (Warpscript tick format)\n  /* ******************************************************/\n  convertToWarp10Time(date) {\n    date = this.parse(date);\n    return date * 1000;\n  }\n\n  /* ******************************************************/\n  /* Converts @timestamp into ISO 8601 format\n  /* ******************************************************/\n  convertToISO(timestamp) {\n    var date = new Date(Math.floor(timestamp/1000));\n    return date.toISOString();\n  }\n\n  parse(text, roundUp) {\n    if (!text) { return undefined; }\n    if (moment.isMoment(text)) { return text; }\n    if (_.isDate(text)) { return moment(text); }\n\n    var time;\n    var mathString = '';\n    var index;\n    var parseString;\n\n    if (text.substring(0, 3) === 'now') {\n      time = moment();\n      mathString = text.substring('now'.length);\n    } else {\n      index = text.indexOf('||');\n      if (index === -1) {\n        parseString = text;\n        mathString = ''; // nothing else\n      } else {\n        parseString = text.substring(0, index);\n        mathString = text.substring(index + 2);\n      }\n      // We're going to just require ISO8601 timestamps, k?\n      time = moment(parseString, moment.ISO_8601);\n    }\n\n    if (!mathString.length) {\n      return time;\n    }\n\n    return parseDateMath(mathString, time, roundUp);\n  }\n}\n"]}